name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: appointment_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Generate Prisma Client
      run: bun run db:generate

    - name: Run database migrations
      run: bun run db:migrate
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appointment_test

    - name: Run linting
      run: bun run lint

    - name: Run unit tests
      run: bun run test:unit

    - name: Run integration tests
      run: bun run test:integration
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appointment_test
        REDIS_URL: redis://localhost:6379

    - name: Run E2E tests
      run: bun run test:e2e
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appointment_test
        REDIS_URL: redis://localhost:6379
        AWS_ACCESS_KEY_ID: test
        AWS_SECRET_ACCESS_KEY: test
        AWS_REGION: us-east-1
        SQS_QUEUE_URL: http://localhost:9324/queue/test-appointment-queue

    - name: Run performance tests
      run: bun run test:performance
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appointment_test
        REDIS_URL: redis://localhost:6379

    - name: Generate coverage report
      run: bun run test:cov
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/appointment_test
        REDIS_URL: redis://localhost:6379

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: true
        verbose: true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Generate Prisma Client
      run: bun run db:generate

    - name: Build application
      run: bun run build

    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Run security audit
      run: bun audit

    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: typescript

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3